{"version":3,"sources":["logo.svg","components/modal/Modal.js","components/gridComponent/GridComponent.js","components/listComponent/ListComponent.js","components/input/Input.js","components/header/Header.js","screens/home/Home.js","components/dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","setShowModal","showModal","src","children","bookTitle","outline","author","className","id","onClick","GridComponent","genere","readingProgress","useState","style","backgroundImage","width","height","color","ListComponent","genre","defaultClasses","inputClassName","labelClassName","iconClassName","inputComponentClassName","inputIconContainer","Input","type","value","name","label","icon","classes","placeholder","setSearchInput","onFocus","onBlur","errors","isDark","onChange","event","target","Header","pageHeader","setIsGrid","Home","isGrid","searchInput","data","setData","useEffect","fetch","then","response","json","items","catch","err","console","log","result","useMemo","filter","title","Author","lowerCaseTitle","toLowerCase","lowerCaseAuthor","loweCaseGenere","lowerCaseSearchInput","includes","map","book","index","img","Dashboard","setIsDark","dashboardClass","setDashBoardClass","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86b33481.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Children } from \"react\";\r\n\r\nconst Modal=({setShowModal,showModal,children,src,bookTitle,outline,author})=>{\r\n    //Handelling the close button which will set the show modal\r\n    const handleClose=()=>{\r\n        setShowModal(!showModal)\r\n    }\r\n    //Checking if show Modal is set or not\r\n    if(!showModal)\r\n    {\r\n        return null;\r\n    }\r\n    return (\r\n    <div className=\"modal-container\">\r\n    <div className=\"modal\" id=\"modal\">\r\n        <div className=\"content\">\r\n            {/* Image of Book */}\r\n            <img src={src}/>\r\n        </div>\r\n        {/* Info of book */}\r\n        <h2>{bookTitle}</h2>\r\n        <h3>{author}</h3>\r\n        <p>{outline}</p>\r\n        {/* Containing Close button */}\r\n        <div className=\"actions\">\r\n            <button onClick={handleClose}>\r\n                Close\r\n            </button>\r\n        </div>\r\n    \r\n    </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Modal","import { useState } from \"react\";\r\nimport Modal from \"../modal/Modal\";\r\n\r\nconst GridComponent=({src,bookTitle=\"\",author=\"\",genere=\"\",readingProgress,outline})=>{\r\n  //Setting the state of showModal which will make the modal appear when any book component is clicked\r\n    const [showModal,setShowModal]=useState(false);\r\n    const handleCardClick=()=>{\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    return(\r\n        <div onClick={handleCardClick} className=\"grid-card-container\">\r\n            <div className=\"card\" style={{backgroundImage:`url(${src})`,width:\"200px\",height:\"300px\"}}>\r\n              <div className=\"reading-progress\">\r\n                   <span>{readingProgress}</span>\r\n              </div>\r\n              <div className=\"genere\">\r\n                <span>{genere}</span>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"book-name\">\r\n               <span style={{color:\"black\"}}>  {bookTitle}</span>\r\n            </div>\r\n            <div className=\"author\">\r\n              <span style={{color:\"black\"}}>  {author}</span>\r\n            </div>\r\n            <Modal setShowModal={setShowModal} showModal={showModal}\r\n                src={src}\r\n                bookTitle={bookTitle}\r\n                outline={outline}\r\n                author={author}\r\n            >\r\n               \r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default GridComponent;","import Modal from \"../modal/Modal\"\r\nimport {useState} from 'react'\r\nconst ListComponent=({src,bookTitle,author,genre,readingProgress,outline})=>{\r\n      //Setting the state of showModal which will make the modal appear when any book component is clicked\r\n    const [showModal,setShowModal]=useState(false);\r\n    const handleCardClick=()=>{\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n    return(\r\n        <div className=\"list-container\" onClick={handleCardClick}>\r\n            <div className=\"book-title-auth\">\r\n                <img src={src}/>\r\n                <div className=\"title-auth\">\r\n                    <p className=\"title\">{bookTitle}</p>\r\n                    <p className=\"author\">{author}</p>\r\n                </div>\r\n            </div>\r\n            <p className=\"list-genere\">{genre}</p>\r\n            <p className=\"list-reading-progress\">{readingProgress}</p>\r\n            <Modal setShowModal={setShowModal} showModal={showModal}\r\n                src={src}\r\n                bookTitle={bookTitle}\r\n                outline={outline}\r\n                author={author}\r\n            >\r\n             {/*Modal Component  */}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListComponent;","import React, { Fragment } from 'react'\r\n\r\nconst defaultClasses={\r\n    inputClassName:\"\",\r\n    labelClassName:\"\",\r\n    iconClassName:\"\",\r\n    inputComponentClassName:\"\",\r\n    inputIconContainer:\"\"\r\n}\r\nconst Input=({type=\"text\",value,name=\"\",label=\"\",id=\"\",icon=\"\",classes={...defaultClasses},placeholder,setSearchInput,\r\nonFocus=()=>{},onBlur=()=>{},errors,isDark})=>{\r\n    const onChangeHandler=(event)=>{\r\n        setSearchInput(event.target.value);\r\n    }\r\n    const {inputClassName,labelClassName,iconClassName,inputComponentClassName,inputIconContainer}=classes\r\n    return(\r\n        <Fragment>\r\n        <div className={`input-component ${inputComponentClassName}`}>\r\n            {\r\n                label &&( <label className={`label ${labelClassName}`}>{label}</label>)\r\n            }\r\n           <div className={`input-icon-container ${inputIconContainer}`}>\r\n            <input id={id} onChange={onChangeHandler} className={`input ${inputClassName}`} type={type} value={value} name={name} placeholder={placeholder}\r\n            onFocus={onFocus} \r\n            onBlur={onBlur}\r\n            />\r\n            {/* id={id} onChange={onChange} className={`input ${inputClassName}`} type={type} value={value} name={name} placeholder={placeholder} */}\r\n            {icon}\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n        {errors &&<p className=\"input-error\">{errors}</p>}\r\n        </Fragment>\r\n       \r\n    )\r\n}\r\nexport default Input;","import {BsThreeDots} from 'react-icons/bs'\r\nimport {FiGrid} from 'react-icons/fi'\r\nimport {VscListSelection} from 'react-icons/vsc'\r\nimport {BsSearch} from 'react-icons/bs'\r\nimport Input from '../input/Input'\r\nconst Header=({pageHeader,setIsGrid,setSearchInput,isDark})=>{\r\n    const handleGrid=()=>{\r\n       setIsGrid(true);\r\n    }\r\n    const handleList=()=>{\r\n        setIsGrid(false);\r\n    }\r\n    return(\r\n        <div className=\"header\">\r\n            <div className=\"page-header\">\r\n                <div className=\"heading\">\r\n                    <h1 className=\"heading\">{pageHeader}</h1>\r\n                    <BsThreeDots/>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"action-container\">\r\n                <FiGrid onClick={handleGrid} className={\"action-icon\"}/>\r\n                <VscListSelection onClick={handleList} className={\"action-icon\"}/>\r\n                <Input icon={<BsSearch/>} isDark={isDark} classes={{inputComponentClassName:\"hover-action\"}}\r\n                    setSearchInput={setSearchInput}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import { useEffect, useState } from \"react\"\r\nimport GridComponent from \"../../components/gridComponent/GridComponent\";\r\nimport ListComponent from '../../components/listComponent/ListComponent';\r\nimport Header from \"../../components/header/Header\"\r\nimport {useMemo} from 'react'\r\n//import data from '../../data/data'\r\nconst Home=({isDark})=>{\r\n    /**\r\n     * isGrid will be used to set the layout \r\n     * If isGrid is set then the data will be displayed in grid manner\r\n     * If is Grid not set then data will be displayed in list manner\r\n     */\r\n    const [isGrid,setIsGrid]=useState(true);\r\n    //Setting the state of search input it will be changing as soon as user start searching in search box\r\n    const [searchInput,setSearchInput]=useState('')\r\n    //Setting the state of data which will be going to contain the data getting fetched from api\r\n    const [data,setData]=useState([]);\r\n\r\n    //Component Did mount phase used to set the data into data array \r\n    useEffect(()=>{\r\n        fetch(\"http://localhost:3000/data/BookCollection.json\")\r\n        .then(response=>response.json())\r\n     .then(data=>setData(data.items))\r\n     .catch((err)=>{\r\n         console.log(err)\r\n     })  \r\n      },[])\r\n\r\n      //This react hook is used to return filtered data based on the query given by the user\r\n      const result=useMemo(()=>{\r\n        return data.filter((value)=>{\r\n            //Destructuring the value of a book object\r\n            const {title,Author,genere}=value;\r\n            //Converting all of them to lowercase so to handle any kind of query\r\n            const lowerCaseTitle=title.toLowerCase();\r\n            const lowerCaseAuthor=Author.toLowerCase();\r\n            const loweCaseGenere=genere.toLowerCase();\r\n            const lowerCaseSearchInput=searchInput.toLowerCase();\r\n            console.log(lowerCaseTitle,lowerCaseSearchInput)\r\n\r\n            //Returning results on the basis of search input contains title or author or genre of book\r\n            return lowerCaseTitle.includes(lowerCaseSearchInput) || lowerCaseAuthor.includes(lowerCaseSearchInput)|| loweCaseGenere.includes(lowerCaseSearchInput)\r\n        })\r\n    },[searchInput])\r\n    return(\r\n        <div className=\"home-container\">\r\n            {/* Header component */}\r\n            <Header pageHeader=\"Book Library\" \r\n            setIsGrid={setIsGrid}\r\n            setSearchInput={setSearchInput}\r\n            isDark={isDark}\r\n            />\r\n            <hr/>\r\n            {\r\n                // Conditional rendering based on if isGrid is Set or not\r\n                //Grid Component\r\n                isGrid?(\r\n                    <div className=\"grid-layout\">\r\n                {\r\n               //If search input is null the all of the book data will be visible without any filter\r\n                searchInput===''?data.map((book,index)=>(\r\n                    <GridComponent\r\n                    key={index}\r\n                    src={book.img}\r\n                    bookTitle={book.title}\r\n                    author={book.Author}\r\n                    genere={book.genere}\r\n                    readingProgress={book.readingProgress}\r\n                    outline={book.outline}\r\n                    />\r\n                ))://Rendering the Data when search string is provided and data is filtered out\r\n                result.map((book,index)=>(\r\n                    <GridComponent\r\n                    key={index}\r\n                    src={book.img}\r\n                    bookTitle={book.title}\r\n                    author={book.Author}\r\n                    genere={book.genere}\r\n                    readingProgress={book.readingProgress}\r\n                    outline={book.outline}\r\n                    />\r\n                    ))\r\n                 \r\n            }\r\n            </div>\r\n                )://Rendering List Component\r\n                (<div className=\"list-layout\">\r\n                   <div className=\"list-header\">\r\n                        <div className=\"header-component\">\r\n                            <label>Book Title & Author</label>\r\n                        </div>\r\n                        <div className=\"header-component\">\r\n                            <label>Genre</label>\r\n                        </div>\r\n                        <div className=\"header-component\">\r\n                            <label>Reading Progress</label>\r\n                        </div>\r\n                   </div>\r\n                   {\r\n                    //If search input is null the all of the book data will be visible without any filter\r\n                         searchInput===''?data.map((book,index)=>(\r\n                            <ListComponent\r\n                            key={index}\r\n                            src={book.img}\r\n                            bookTitle={book.title}\r\n                            author={book.Author}\r\n                            genere={book.genere}\r\n                            readingProgress={book.readingProgress}\r\n                            outline={book.outline}\r\n                            />\r\n                        )):\r\n                        //Rendering the Data when search string is provided and data is filtered out\r\n                        result.map((book,index)=>(\r\n                            <ListComponent\r\n                            key={index}\r\n                            src={book.img}\r\n                            bookTitle={book.title}\r\n                            author={book.Author}\r\n                            genere={book.genere}\r\n                            readingProgress={book.readingProgress}\r\n                            outline={book.outline}\r\n                            />\r\n                            ))\r\n                   }\r\n                </div>)\r\n            }           \r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Home\r\n\r\n","import {AiOutlinePlayCircle} from 'react-icons/ai'\r\nimport {GrAddCircle} from 'react-icons/gr'\r\nimport {CgDarkMode} from 'react-icons/cg'\r\nimport Home from '../../screens/home/Home'\r\nimport { useState } from 'react'\r\nconst Dashboard=({children})=>{\r\n    //isDark  will be used to handle the class of dashboard if it is of dark mode or not\r\n    const [isDark,setIsDark]=useState(false)\r\n    //Depending upon the state of isDark Dashboard class will be set accordingly\r\n    const [dashboardClass,setDashBoardClass]=useState(\"dashboard-layout-white\")\r\n   \r\n    //To handle once the Dark mode from settings is clicked\r\n    const handleDarkMode=()=>{\r\n        setIsDark(!isDark)\r\n        isDark?setDashBoardClass(\"dashboard-layout-dark\"):setDashBoardClass(\"dashboard-layout-white\")\r\n        \r\n    }\r\n\r\n    return(\r\n      \r\n        <div className={dashboardClass}>\r\n            {/* This is navigation bar which will remain common for all of the screens coming up */}\r\n            <div className=\"side-nav-bar\">\r\n                <div className=\"nav-container\">\r\n                    <h2>Library</h2>\r\n                    <div className=\"container\">\r\n\r\n                        <div className=\"options\">\r\n                            <AiOutlinePlayCircle/>\r\n                            <label>My Books</label>\r\n                        </div>\r\n                        <div className=\"options\">\r\n                            <GrAddCircle/>\r\n                            <label>Add New Books</label>\r\n                        </div>\r\n                    </div>\r\n                    <h2>Settings</h2>\r\n                    <div className=\"container\">\r\n                        \r\n                        <div className=\"options\">\r\n                            <CgDarkMode/>\r\n                            <label className=\"dark-mode\" onClick={handleDarkMode}>Dark Mode</label>\r\n                            <span>{}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>             \r\n            </div>\r\n            {/* This is the container to represent the screens*/}\r\n            <div className=\"main-container\">\r\n                \r\n               <Home isDark={isDark}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dashboard","import logo from './logo.svg';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Home from './screens/home/Home'\nimport './style/main.scss'\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Dashboard/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/main.scss'\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}